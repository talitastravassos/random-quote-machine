{"version":3,"sources":["context/Quote.js","components/Footer.js","components/QuoteBox.js","App.js","index.js"],"names":["QuoteContext","React","createContext","URL_QUOTES","QuotesProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getQuote","fetch","then","response","json","setState","quote","state","value","objectSpread","react_default","a","createElement","Provider","children","Component","Footer","className","href","colors","QuoteBox","_useContext","useContext","_useState","useState","_useState2","slicedToArray","randomColor","setRandomColor","useEffect","console","log","Math","floor","random","style","backgroundColor","id","color","quoteText","quoteAuthor","role","aria-pressed","title","target","rel","fa","type","onClick","components_Footer","App","Quote_QuotesProvider","components_QuoteBox","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mRAGaA,SAAeC,IAAMC,cAAc,KAE1CC,EAAa,iCAEEC,cACnB,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAORQ,SAAW,WACTC,MAAMX,GACHY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIX,EAAKY,SAAS,CAAEC,MAAOF,OATvCX,EAAKc,MAAQ,CACXD,MAAO,IAHOb,mFAehBG,KAAKI,4CAKL,IAAMQ,EAAKd,OAAAe,EAAA,EAAAf,CAAA,GACNE,KAAKW,MADC,CAETP,SAAUJ,KAAKI,WAGjB,OACEU,EAAAC,EAAAC,cAACzB,EAAa0B,SAAd,CAAuBL,MAAOA,GAC3BZ,KAAKJ,MAAMsB,iBA5BwBC,2BCO3BC,EAZF,WACX,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQK,UAAU,0BAChBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gDAAf,qBACEP,EAAAC,EAAAC,cAAA,KAAGM,KAAK,sCAAsCD,UAAU,cAAxD,sBCFNE,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAqEWC,EAlEE,SAAC5B,GAAU,IAAA6B,EAEAC,qBAAWnC,GAA/Ba,EAFoBqB,EAEpBrB,SAAUM,EAFUe,EAEVf,MAFUiB,EAGYC,mBAAS,IAHrBC,EAAA/B,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,GAGpBI,EAHoBF,EAAA,GAGPG,EAHOH,EAAA,GAe5B,OANAI,oBAAU,WACNC,QAAQC,IAAIzB,GACZsB,EAAeT,EAAOa,KAAKC,MAAsB,GAAhBD,KAAKE,aAEvC,CAAC5B,IAGAI,EAAAC,EAAAC,cAAA,OAAKK,UAAU,UAAUkB,MAAO,CAAEC,gBAAiBT,IACnDjB,EAAAC,EAAAC,cAAA,OAAKyB,GAAG,aACJ3B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAAA,KAAGyB,GAAG,OAAOF,MAAO,CAAEG,MAAOX,IAA7B,IACErB,EAAMiC,UADR,MAKA7B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACfP,EAAAC,EAAAC,cAAA,QAAMyB,GAAG,SAASpB,UAAU,cAAckB,MAAO,CAAEG,MAAOX,IAA1D,KACOrB,EAAMkC,cAIb9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WAEfP,EAAAC,EAAAC,cAAA,KACIK,UAAU,gCACVwB,KAAK,SACLC,eAAa,OACbL,GAAG,cACHM,MAAM,oBACNC,OAAO,SACPC,IAAI,sBACJV,MAAO,CAAEC,gBAAiBT,GAC1BT,KACA,4FACAZ,EAAMiC,UACN,aACAjC,EAAMkC,YACN,UAEA9B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,MAhBJ,SAmBApC,EAAAC,EAAAC,cAAA,UACImC,KAAK,SACL9B,UAAU,kBACVoB,GAAG,YACHF,MAAO,CAAEC,gBAAiBT,GAC1BqB,QAnDQ,WAChBhD,MAmDQU,EAAAC,EAAAC,cAACkC,EAAA,EAAD,MANJ,eAWJpC,EAAAC,EAAAC,cAACqC,EAAD,QCnEWC,mLARX,OACExC,EAAAC,EAAAC,cAACuC,EAAD,KACIzC,EAAAC,EAAAC,cAACwC,EAAD,cAJQrC,aCClBsC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5c3369f9.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport 'whatwg-fetch';\r\n\r\nexport const QuoteContext = React.createContext({});\r\n\r\nconst URL_QUOTES = 'https://quota.glitch.me/random'\r\n\r\nexport default class QuotesProvider extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      quote: ''\r\n    }\r\n\r\n  }\r\n\r\n  getQuote = () => {\r\n    fetch(URL_QUOTES)\r\n      .then(response => response.json())\r\n      .then(json => this.setState({ quote: json }))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getQuote();\r\n  }\r\n\r\n  render() {\r\n\r\n    const value = {\r\n      ...this.state,\r\n      getQuote: this.getQuote\r\n    }\r\n\r\n    return (\r\n      <QuoteContext.Provider value={value}>\r\n        {this.props.children}\r\n      </QuoteContext.Provider>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <div>\r\n        <footer className=\"page-footer font-small\">\r\n          <div className=\"footer-copyright text-center py-3 text-white\">Â© 2019 Code by:\r\n            <a href=\"https://github.com/talitastravassos\" className=\"text-white\"> Talita S. T. </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Footer","import React, { useContext, useEffect, useState } from 'react';\r\nimport { FaTwitter, FaSyncAlt } from \"react-icons/fa\";\r\nimport Footer from './Footer';\r\nimport { QuoteContext } from '../context/Quote';\r\n\r\nconst colors = [\r\n    \"#16a085\",\r\n    \"#27ae60\",\r\n    \"#2c3e50\",\r\n    \"#f39c12\",\r\n    \"#e74c3c\",\r\n    \"#9b59b6\",\r\n    \"#FB6964\",\r\n    \"#342224\",\r\n    \"#472E32\",\r\n    \"#BDBB99\",\r\n    \"#77B1A9\",\r\n    \"#73A857\"\r\n  ]\r\n\r\nconst QuoteBox = (props) => {\r\n\r\nconst { getQuote, quote } = useContext(QuoteContext);\r\nconst [ randomColor, setRandomColor ] = useState(\"\")\r\n\r\nconst handleQuote = () => {\r\n    getQuote();\r\n}\r\n\r\nuseEffect(() => {\r\n    console.log(quote)\r\n    setRandomColor(colors[Math.floor(Math.random() * 11)]);\r\n\r\n}, [quote]);\r\n\r\nreturn (\r\n    <div className=\"wrapper\" style={{ backgroundColor: randomColor }}>\r\n    <div id=\"quote-box\">\r\n        <div className=\"quote-text\">\r\n        <p id=\"text\" style={{ color: randomColor }}>\r\n        \"{quote.quoteText}\"\r\n        </p>\r\n\r\n        </div>\r\n        <div className=\"quote-author\">\r\n        <span id=\"author\" className=\"font-italic\" style={{ color: randomColor }}>\r\n            - {quote.quoteAuthor}\r\n        </span>\r\n\r\n        </div>\r\n        <div className=\"buttons\">\r\n        \r\n        <a \r\n            className=\"btn btn-primary btn-lg active\" \r\n            role=\"button\" \r\n            aria-pressed=\"true\"\r\n            id=\"tweet-quote\"\r\n            title=\"Tweet this quote!\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ backgroundColor: randomColor }}\r\n            href={\r\n            'https://twitter.com/intent/tweet?hashtags=quotes,freecodecamp&related=freecodecamp&text=\"' +\r\n            quote.quoteText +\r\n            '\" %0D%0A- ' +\r\n            quote.quoteAuthor +\r\n            \"%0D%0A\"\r\n            }>\r\n            <FaTwitter />\r\n            Tweet\r\n        </a>\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary\" \r\n            id=\"new-quote\"\r\n            style={{ backgroundColor: randomColor }} \r\n            onClick={handleQuote}>\r\n            <FaSyncAlt />\r\n            New Quote\r\n        </button>\r\n        </div>\r\n    </div>\r\n    <Footer />\r\n    </div>\r\n    )}\r\n\r\nexport default QuoteBox","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport QuotesProvider from './context/Quote';\r\nimport QuoteBox from './components/QuoteBox';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <QuotesProvider>\r\n          <QuoteBox />\r\n      </QuotesProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}